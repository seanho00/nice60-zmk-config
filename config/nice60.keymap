/*
 * Copyright (c) 2021 Nick Winans
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/reset.h>
#include <dt-bindings/zmk/ext_power.h>

// Layer behaviours:
// &mo <LAYER>
// &lt <LAYER> <KEY>
// &to <LAYER>
// &tog <LAYER>
// Hold-Tap behaviours:
// &mt <KEY> <KEY>: mod-tap
// &hm <KEY> <KEY>: homerow mods
// Mod-Morph
// &sk <KEY>
// &sl <LAYER>

#define t___ &trans
#define DEF_L 0
#define NOH_L 1
#define NAV_L 2
#define APP_L 3
#define KBD_L 4
#define LCK_L 5

/ {
	behaviors {
		hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <150>;
			quick_tap_ms = <100>;
			retro-tap;
			bindings = <&kp>, <&kp>;
		};
	};

	combos {
#include "nice60.combos"
	};

	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
			bindings = <
	&kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS &kp EQUAL &kp BSPC
	&kp TAB &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp LBKT &kp RBKT &kp BSLH
	&kp CLCK &hm LGUI A &hm LALT S &hm LSHFT D &hm LCTRL F &kp G &kp H &hm RCTRL J &hm RSHFT K &hm RALT L &hm RGUI SEMI &kp SQT &kp RET
	&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHFT
	&kp LCTRL &kp LGUI &kp LALT &lt NAV_L SPACE &mt RALT LEFT &mt RGUI DOWN &mt RCTRL UP &lt APP_L RIGHT
			>;
		};

 		nohrm_layer {
			bindings = <
	t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___
	t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___
	t___ &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMI t___ t___
	t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___
	t___ t___ t___ t___ t___ t___ t___ t___
			>;
		};

		nav_layer {
			bindings = <
	t___ &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &kp DEL
	t___ t___ t___ t___ t___ t___ &kp C_AC_UNDO &kp C_AC_PASTE &kp C_AC_COPY &kp C_AC_CUT &kp C_AC_REDO t___ t___ t___
	t___ t___ t___ t___ t___ t___ &kp LEFT &kp DOWN &kp UP &kp RIGHT t___ t___ t___
	t___ t___ t___ t___ t___ t___ &kp HOME &kp PG_DN &kp PG_UP &kp END t___ t___
	t___ t___ t___ t___ t___ t___ t___ t___
			>;
		};

 		app_layer {
			bindings = <
	&kp C_SLEEP t___ t___ t___ t___ t___ t___ t___ t___ t___ &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_AL_LOCK
	t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ 
	t___ t___ t___ t___ t___ t___ &kp C_PREV &kp C_STOP &kp C_EJECT &kp C_NEXT t___ t___ t___
	t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___
	&kp SYSREQ t___ t___ &kp C_PP &kp C_REC t___ t___ t___ 
			>;
		};

 		kbd_layer {
			bindings = <
	&reset &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 t___ t___ t___ t___ t___ t___ &tog NOH_L t___
	&bootloader &bt BT_CLR &out OUT_BLE &out OUT_USB t___ t___ t___ t___ t___ t___ t___ t___ t___ t___
	t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ 
	t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___
	t___ t___ t___ t___ t___ t___ t___ t___
			>;
		};

 		lock_layer {
			bindings = <
	&none &none &none &none &none &none &none &none &none &none &none &none &none &none
	&none &none &none &none &none &none &none &none &none &none &none &none &none &none
	&none &none &none &none &none &none &none &none &none &none &none &none &none
	&none &none &none &none &none &none &none &none &none &none &none &none
	&none &none &none &none &none &none &none &none
			>;
		};

 		sample_layer {
			bindings = <
	t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___
	t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___
	t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___
	t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___ t___
	t___ t___ t___ t___ t___ t___ t___ t___
			>;
		};

	};
};

#undef t___
#undef DEF_L
#undef NOH_L
#undef NAV_L
#undef APP_L
#undef KBD_L
#undef LCK_L

